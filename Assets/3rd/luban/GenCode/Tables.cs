//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Threading.Tasks;
using SimpleJSON;


namespace cfg
{
   
public sealed class Tables
{
    public item.TbItem TbItem {get; private set; }
    public Game.TbConfig TbConfig {get; private set; }
    public Game.TbLocalization TbLocalization {get; private set; }
    public Game.TbUIPath TbUIPath {get; private set; }

    private static Tables _instance = null;
    private static readonly object padlock = new object();
    public static Tables Instance {
        get
        {
            if (_instance == null)
            {
                lock (padlock)
                {
                    if (_instance == null)
                    {
                        _instance = new Tables();
                    }
                }
            }
            return _instance;
        }
    }


    public Tables() { }
    
    public async Task LoadAsync(System.Func<string, Task<JSONNode>> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbItem = new item.TbItem(await loader("item_tbitem")); 
        tables.Add("item.TbItem", TbItem);
        TbConfig = new Game.TbConfig(await loader("game_tbconfig")); 
        tables.Add("Game.TbConfig", TbConfig);
        TbLocalization = new Game.TbLocalization(await loader("game_tblocalization")); 
        tables.Add("Game.TbLocalization", TbLocalization);
        TbUIPath = new Game.TbUIPath(await loader("game_tbuipath")); 
        tables.Add("Game.TbUIPath", TbUIPath);

        TbItem.Resolve(tables); 
        TbConfig.Resolve(tables); 
        TbLocalization.Resolve(tables); 
        TbUIPath.Resolve(tables); 
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbItem.TranslateText(translator); 
        TbConfig.TranslateText(translator); 
        TbLocalization.TranslateText(translator); 
        TbUIPath.TranslateText(translator); 
    }
}

}
